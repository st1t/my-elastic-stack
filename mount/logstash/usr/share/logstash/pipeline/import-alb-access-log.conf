input {
  file {
    path => "/tmp/alb.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
  }
#  s3 {
#    bucket => "alb-logs"
#    prefix => "AWSLogs/xxxx/elasticloadbalancing/ap-northeast-1/"
#    exclude_pattern => ".*2024/0[1-6].*"
#    sincedb_path => "/usr/share/logstash/data/sincedb/s3_alb_sincedb"
#  }
}

filter {
  grok {
    match => { "message" => "%{ELB_ACCESS_LOG}" }
  }

  date {
    match => [ "timestamp", "ISO8601" ]
    timezone => "Asia/Tokyo"
    target => "@timestamp"
  }

  useragent {
    source => "[user_agent][original]"
    target => "useragent"
  }

  geoip {
    source => "[source][ip]"
    target => "geoip"
  }

  if "_geoip_lookup_failure" not in [tags] {
    mutate {
      remove_field => [ "message","event","[user_agent][original]" ]
    }
  }
}

output {
  if "_grokparsefailure" in [tags] or "_geoip_lookup_failure" in [tags] {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      index => "alb-logs-parse-failure-%{+YYYY.MM.dd}"
    }
  } else {
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      index => "alb-logs-%{+YYYY.MM.dd}"
    }
  }
}
